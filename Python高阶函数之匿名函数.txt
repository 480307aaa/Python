#!/usr/bin/env python3
# -*- coding: utf-8 -*-

#定义一个延迟求和函数，返回函数，而不是立即计算
def lazy_sum(*args):
	def sum():
		res=0
		for x in args:
			res+=x
		return res
	return sum

调用方式:
f=lazy_sum(1,2,3,4)
f()

#返回函数中引用了循环变量，导致输出结果和预想的不一致
def count():
	fs=[]
	for i in range(1,4):
		def f():
			return i*i
		fs.append(f)
	return fs
调用方式:
f1,f2,f3=count()
f1()
f2()
f3()
结果都为9，因为返回函数f中引用了循环变量i，没有立即计算，等到i循环到3时才返回

#若要在返回函数中引用循环变量，用该函数的参数绑定循环变量当前的值，无论该循环变量后续如何更改，已绑定到函数参数的值不变

def count():
	def f(j):
		def g():
			return j*j
		return g
	fs=[]
	for x in range(1,4):
		fs.append(f(x))
	return fs

>>> f1,f2,f3=count()
>>> f1()
1
>>> f2()
4
>>> f3()
9
